// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mtcrud.proto

package pers.mtx.grpc.mtcrud;

public interface GetParamsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:mtCrud.GetParams)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>map&lt;string, string&gt; order = 1;</code>
   */
  int getOrderCount();
  /**
   * <code>map&lt;string, string&gt; order = 1;</code>
   */
  boolean containsOrder(
      java.lang.String key);
  /**
   * Use {@link #getOrderMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getOrder();
  /**
   * <code>map&lt;string, string&gt; order = 1;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getOrderMap();
  /**
   * <code>map&lt;string, string&gt; order = 1;</code>
   */

  /* nullable */
java.lang.String getOrderOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <code>map&lt;string, string&gt; order = 1;</code>
   */

  java.lang.String getOrderOrThrow(
      java.lang.String key);

  /**
   * <code>string limit = 2;</code>
   * @return The limit.
   */
  java.lang.String getLimit();
  /**
   * <code>string limit = 2;</code>
   * @return The bytes for limit.
   */
  com.google.protobuf.ByteString
      getLimitBytes();

  /**
   * <code>repeated string cols = 3;</code>
   * @return A list containing the cols.
   */
  java.util.List<java.lang.String>
      getColsList();
  /**
   * <code>repeated string cols = 3;</code>
   * @return The count of cols.
   */
  int getColsCount();
  /**
   * <code>repeated string cols = 3;</code>
   * @param index The index of the element to return.
   * @return The cols at the given index.
   */
  java.lang.String getCols(int index);
  /**
   * <code>repeated string cols = 3;</code>
   * @param index The index of the value to return.
   * @return The bytes of the cols at the given index.
   */
  com.google.protobuf.ByteString
      getColsBytes(int index);

  /**
   * <code>string dbName = 4;</code>
   * @return The dbName.
   */
  java.lang.String getDbName();
  /**
   * <code>string dbName = 4;</code>
   * @return The bytes for dbName.
   */
  com.google.protobuf.ByteString
      getDbNameBytes();

  /**
   * <code>string tbName = 5;</code>
   * @return The tbName.
   */
  java.lang.String getTbName();
  /**
   * <code>string tbName = 5;</code>
   * @return The bytes for tbName.
   */
  com.google.protobuf.ByteString
      getTbNameBytes();

  /**
   * <code>map&lt;string, string&gt; eq = 6;</code>
   */
  int getEqCount();
  /**
   * <code>map&lt;string, string&gt; eq = 6;</code>
   */
  boolean containsEq(
      java.lang.String key);
  /**
   * Use {@link #getEqMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getEq();
  /**
   * <code>map&lt;string, string&gt; eq = 6;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getEqMap();
  /**
   * <code>map&lt;string, string&gt; eq = 6;</code>
   */

  /* nullable */
java.lang.String getEqOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <code>map&lt;string, string&gt; eq = 6;</code>
   */

  java.lang.String getEqOrThrow(
      java.lang.String key);

  /**
   * <code>map&lt;string, string&gt; gt = 7;</code>
   */
  int getGtCount();
  /**
   * <code>map&lt;string, string&gt; gt = 7;</code>
   */
  boolean containsGt(
      java.lang.String key);
  /**
   * Use {@link #getGtMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getGt();
  /**
   * <code>map&lt;string, string&gt; gt = 7;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getGtMap();
  /**
   * <code>map&lt;string, string&gt; gt = 7;</code>
   */

  /* nullable */
java.lang.String getGtOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <code>map&lt;string, string&gt; gt = 7;</code>
   */

  java.lang.String getGtOrThrow(
      java.lang.String key);

  /**
   * <code>map&lt;string, string&gt; lt = 8;</code>
   */
  int getLtCount();
  /**
   * <code>map&lt;string, string&gt; lt = 8;</code>
   */
  boolean containsLt(
      java.lang.String key);
  /**
   * Use {@link #getLtMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getLt();
  /**
   * <code>map&lt;string, string&gt; lt = 8;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getLtMap();
  /**
   * <code>map&lt;string, string&gt; lt = 8;</code>
   */

  /* nullable */
java.lang.String getLtOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <code>map&lt;string, string&gt; lt = 8;</code>
   */

  java.lang.String getLtOrThrow(
      java.lang.String key);

  /**
   * <code>map&lt;string, string&gt; like = 9;</code>
   */
  int getLikeCount();
  /**
   * <code>map&lt;string, string&gt; like = 9;</code>
   */
  boolean containsLike(
      java.lang.String key);
  /**
   * Use {@link #getLikeMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getLike();
  /**
   * <code>map&lt;string, string&gt; like = 9;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getLikeMap();
  /**
   * <code>map&lt;string, string&gt; like = 9;</code>
   */

  /* nullable */
java.lang.String getLikeOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <code>map&lt;string, string&gt; like = 9;</code>
   */

  java.lang.String getLikeOrThrow(
      java.lang.String key);
}
