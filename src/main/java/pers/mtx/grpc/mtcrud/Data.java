// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mtcrud.proto

package pers.mtx.grpc.mtcrud;

/**
 * Protobuf type {@code mtCrud.Data}
 */
public final class Data extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:mtCrud.Data)
    DataOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Data.newBuilder() to construct.
  private Data(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Data() {
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new Data();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return mtcrudProto.internal_static_mtCrud_Data_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 1:
        return internalGetDataMap();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return mtcrudProto.internal_static_mtCrud_Data_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            Data.class, Builder.class);
  }

  public static final int DATAMAP_FIELD_NUMBER = 1;
  private static final class DataMapDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        String, String> defaultEntry =
            com.google.protobuf.MapEntry
            .<String, String>newDefaultInstance(
                mtcrudProto.internal_static_mtCrud_Data_DataMapEntry_descriptor,
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapField<
      String, String> dataMap_;
  private com.google.protobuf.MapField<String, String>
  internalGetDataMap() {
    if (dataMap_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          DataMapDefaultEntryHolder.defaultEntry);
    }
    return dataMap_;
  }

  public int getDataMapCount() {
    return internalGetDataMap().getMap().size();
  }
  /**
   * <code>map&lt;string, string&gt; dataMap = 1;</code>
   */

  @Override
  public boolean containsDataMap(
      String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetDataMap().getMap().containsKey(key);
  }
  /**
   * Use {@link #getDataMapMap()} instead.
   */
  @Override
  @Deprecated
  public java.util.Map<String, String> getDataMap() {
    return getDataMapMap();
  }
  /**
   * <code>map&lt;string, string&gt; dataMap = 1;</code>
   */
  @Override

  public java.util.Map<String, String> getDataMapMap() {
    return internalGetDataMap().getMap();
  }
  /**
   * <code>map&lt;string, string&gt; dataMap = 1;</code>
   */
  @Override

  public String getDataMapOrDefault(
      String key,
      String defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<String, String> map =
        internalGetDataMap().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, string&gt; dataMap = 1;</code>
   */
  @Override

  public String getDataMapOrThrow(
      String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<String, String> map =
        internalGetDataMap().getMap();
    if (!map.containsKey(key)) {
      throw new IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetDataMap(),
        DataMapDefaultEntryHolder.defaultEntry,
        1);
    getUnknownFields().writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (java.util.Map.Entry<String, String> entry
         : internalGetDataMap().getMap().entrySet()) {
      com.google.protobuf.MapEntry<String, String>
      dataMap__ = DataMapDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, dataMap__);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof Data)) {
      return super.equals(obj);
    }
    Data other = (Data) obj;

    if (!internalGetDataMap().equals(
        other.internalGetDataMap())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (!internalGetDataMap().getMap().isEmpty()) {
      hash = (37 * hash) + DATAMAP_FIELD_NUMBER;
      hash = (53 * hash) + internalGetDataMap().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static Data parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Data parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Data parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Data parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Data parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Data parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Data parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static Data parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static Data parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static Data parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static Data parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static Data parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(Data prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code mtCrud.Data}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:mtCrud.Data)
      DataOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mtcrudProto.internal_static_mtCrud_Data_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetDataMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetMutableDataMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mtcrudProto.internal_static_mtCrud_Data_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Data.class, Builder.class);
    }

    // Construct using pers.mtx.grpc.mtcrud.Data.newBuilder()
    private Builder() {

    }

    private Builder(
        BuilderParent parent) {
      super(parent);

    }
    @Override
    public Builder clear() {
      super.clear();
      internalGetMutableDataMap().clear();
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return mtcrudProto.internal_static_mtCrud_Data_descriptor;
    }

    @Override
    public Data getDefaultInstanceForType() {
      return Data.getDefaultInstance();
    }

    @Override
    public Data build() {
      Data result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public Data buildPartial() {
      Data result = new Data(this);
      int from_bitField0_ = bitField0_;
      result.dataMap_ = internalGetDataMap();
      result.dataMap_.makeImmutable();
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof Data) {
        return mergeFrom((Data)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(Data other) {
      if (other == Data.getDefaultInstance()) return this;
      internalGetMutableDataMap().mergeFrom(
          other.internalGetDataMap());
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.MapEntry<String, String>
              dataMap__ = input.readMessage(
                  DataMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableDataMap().getMutableMap().put(
                  dataMap__.getKey(), dataMap__.getValue());
              break;
            } // case 10
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.MapField<
        String, String> dataMap_;
    private com.google.protobuf.MapField<String, String>
    internalGetDataMap() {
      if (dataMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            DataMapDefaultEntryHolder.defaultEntry);
      }
      return dataMap_;
    }
    private com.google.protobuf.MapField<String, String>
    internalGetMutableDataMap() {
      onChanged();;
      if (dataMap_ == null) {
        dataMap_ = com.google.protobuf.MapField.newMapField(
            DataMapDefaultEntryHolder.defaultEntry);
      }
      if (!dataMap_.isMutable()) {
        dataMap_ = dataMap_.copy();
      }
      return dataMap_;
    }

    public int getDataMapCount() {
      return internalGetDataMap().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; dataMap = 1;</code>
     */

    @Override
    public boolean containsDataMap(
        String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetDataMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getDataMapMap()} instead.
     */
    @Override
    @Deprecated
    public java.util.Map<String, String> getDataMap() {
      return getDataMapMap();
    }
    /**
     * <code>map&lt;string, string&gt; dataMap = 1;</code>
     */
    @Override

    public java.util.Map<String, String> getDataMapMap() {
      return internalGetDataMap().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; dataMap = 1;</code>
     */
    @Override

    public String getDataMapOrDefault(
        String key,
        String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<String, String> map =
          internalGetDataMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; dataMap = 1;</code>
     */
    @Override

    public String getDataMapOrThrow(
        String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<String, String> map =
          internalGetDataMap().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearDataMap() {
      internalGetMutableDataMap().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;string, string&gt; dataMap = 1;</code>
     */

    public Builder removeDataMap(
        String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableDataMap().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @Deprecated
    public java.util.Map<String, String>
    getMutableDataMap() {
      return internalGetMutableDataMap().getMutableMap();
    }
    /**
     * <code>map&lt;string, string&gt; dataMap = 1;</code>
     */
    public Builder putDataMap(
        String key,
        String value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) {
  throw new NullPointerException("map value");
}

      internalGetMutableDataMap().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, string&gt; dataMap = 1;</code>
     */

    public Builder putAllDataMap(
        java.util.Map<String, String> values) {
      internalGetMutableDataMap().getMutableMap()
          .putAll(values);
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:mtCrud.Data)
  }

  // @@protoc_insertion_point(class_scope:mtCrud.Data)
  private static final Data DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new Data();
  }

  public static Data getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Data>
      PARSER = new com.google.protobuf.AbstractParser<Data>() {
    @Override
    public Data parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Data> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<Data> getParserForType() {
    return PARSER;
  }

  @Override
  public Data getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

