// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mtcrud.proto

package pers.mtx.grpc.mtcrud;

/**
 * Protobuf type {@code mtCrud.DelParams}
 */
public final class DelParams extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:mtCrud.DelParams)
    DelParamsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use DelParams.newBuilder() to construct.
  private DelParams(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DelParams() {
    dbName_ = "";
    tbName_ = "";
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new DelParams();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return mtcrudProto.internal_static_mtCrud_DelParams_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 6:
        return internalGetEq();
      case 7:
        return internalGetGt();
      case 8:
        return internalGetLt();
      case 9:
        return internalGetLike();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return mtcrudProto.internal_static_mtCrud_DelParams_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            DelParams.class, Builder.class);
  }

  public static final int DBNAME_FIELD_NUMBER = 3;
  private volatile Object dbName_;
  /**
   * <code>string dbName = 3;</code>
   * @return The dbName.
   */
  @Override
  public String getDbName() {
    Object ref = dbName_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      dbName_ = s;
      return s;
    }
  }
  /**
   * <code>string dbName = 3;</code>
   * @return The bytes for dbName.
   */
  @Override
  public com.google.protobuf.ByteString
      getDbNameBytes() {
    Object ref = dbName_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      dbName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TBNAME_FIELD_NUMBER = 4;
  private volatile Object tbName_;
  /**
   * <code>string tbName = 4;</code>
   * @return The tbName.
   */
  @Override
  public String getTbName() {
    Object ref = tbName_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      tbName_ = s;
      return s;
    }
  }
  /**
   * <code>string tbName = 4;</code>
   * @return The bytes for tbName.
   */
  @Override
  public com.google.protobuf.ByteString
      getTbNameBytes() {
    Object ref = tbName_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      tbName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int EQ_FIELD_NUMBER = 6;
  private static final class EqDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        String, String> defaultEntry =
            com.google.protobuf.MapEntry
            .<String, String>newDefaultInstance(
                mtcrudProto.internal_static_mtCrud_DelParams_EqEntry_descriptor,
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapField<
      String, String> eq_;
  private com.google.protobuf.MapField<String, String>
  internalGetEq() {
    if (eq_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          EqDefaultEntryHolder.defaultEntry);
    }
    return eq_;
  }

  public int getEqCount() {
    return internalGetEq().getMap().size();
  }
  /**
   * <code>map&lt;string, string&gt; eq = 6;</code>
   */

  @Override
  public boolean containsEq(
      String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetEq().getMap().containsKey(key);
  }
  /**
   * Use {@link #getEqMap()} instead.
   */
  @Override
  @Deprecated
  public java.util.Map<String, String> getEq() {
    return getEqMap();
  }
  /**
   * <code>map&lt;string, string&gt; eq = 6;</code>
   */
  @Override

  public java.util.Map<String, String> getEqMap() {
    return internalGetEq().getMap();
  }
  /**
   * <code>map&lt;string, string&gt; eq = 6;</code>
   */
  @Override

  public String getEqOrDefault(
      String key,
      String defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<String, String> map =
        internalGetEq().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, string&gt; eq = 6;</code>
   */
  @Override

  public String getEqOrThrow(
      String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<String, String> map =
        internalGetEq().getMap();
    if (!map.containsKey(key)) {
      throw new IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int GT_FIELD_NUMBER = 7;
  private static final class GtDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        String, String> defaultEntry =
            com.google.protobuf.MapEntry
            .<String, String>newDefaultInstance(
                mtcrudProto.internal_static_mtCrud_DelParams_GtEntry_descriptor,
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapField<
      String, String> gt_;
  private com.google.protobuf.MapField<String, String>
  internalGetGt() {
    if (gt_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          GtDefaultEntryHolder.defaultEntry);
    }
    return gt_;
  }

  public int getGtCount() {
    return internalGetGt().getMap().size();
  }
  /**
   * <code>map&lt;string, string&gt; gt = 7;</code>
   */

  @Override
  public boolean containsGt(
      String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetGt().getMap().containsKey(key);
  }
  /**
   * Use {@link #getGtMap()} instead.
   */
  @Override
  @Deprecated
  public java.util.Map<String, String> getGt() {
    return getGtMap();
  }
  /**
   * <code>map&lt;string, string&gt; gt = 7;</code>
   */
  @Override

  public java.util.Map<String, String> getGtMap() {
    return internalGetGt().getMap();
  }
  /**
   * <code>map&lt;string, string&gt; gt = 7;</code>
   */
  @Override

  public String getGtOrDefault(
      String key,
      String defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<String, String> map =
        internalGetGt().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, string&gt; gt = 7;</code>
   */
  @Override

  public String getGtOrThrow(
      String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<String, String> map =
        internalGetGt().getMap();
    if (!map.containsKey(key)) {
      throw new IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int LT_FIELD_NUMBER = 8;
  private static final class LtDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        String, String> defaultEntry =
            com.google.protobuf.MapEntry
            .<String, String>newDefaultInstance(
                mtcrudProto.internal_static_mtCrud_DelParams_LtEntry_descriptor,
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapField<
      String, String> lt_;
  private com.google.protobuf.MapField<String, String>
  internalGetLt() {
    if (lt_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          LtDefaultEntryHolder.defaultEntry);
    }
    return lt_;
  }

  public int getLtCount() {
    return internalGetLt().getMap().size();
  }
  /**
   * <code>map&lt;string, string&gt; lt = 8;</code>
   */

  @Override
  public boolean containsLt(
      String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetLt().getMap().containsKey(key);
  }
  /**
   * Use {@link #getLtMap()} instead.
   */
  @Override
  @Deprecated
  public java.util.Map<String, String> getLt() {
    return getLtMap();
  }
  /**
   * <code>map&lt;string, string&gt; lt = 8;</code>
   */
  @Override

  public java.util.Map<String, String> getLtMap() {
    return internalGetLt().getMap();
  }
  /**
   * <code>map&lt;string, string&gt; lt = 8;</code>
   */
  @Override

  public String getLtOrDefault(
      String key,
      String defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<String, String> map =
        internalGetLt().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, string&gt; lt = 8;</code>
   */
  @Override

  public String getLtOrThrow(
      String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<String, String> map =
        internalGetLt().getMap();
    if (!map.containsKey(key)) {
      throw new IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int LIKE_FIELD_NUMBER = 9;
  private static final class LikeDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        String, String> defaultEntry =
            com.google.protobuf.MapEntry
            .<String, String>newDefaultInstance(
                mtcrudProto.internal_static_mtCrud_DelParams_LikeEntry_descriptor,
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapField<
      String, String> like_;
  private com.google.protobuf.MapField<String, String>
  internalGetLike() {
    if (like_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          LikeDefaultEntryHolder.defaultEntry);
    }
    return like_;
  }

  public int getLikeCount() {
    return internalGetLike().getMap().size();
  }
  /**
   * <code>map&lt;string, string&gt; like = 9;</code>
   */

  @Override
  public boolean containsLike(
      String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetLike().getMap().containsKey(key);
  }
  /**
   * Use {@link #getLikeMap()} instead.
   */
  @Override
  @Deprecated
  public java.util.Map<String, String> getLike() {
    return getLikeMap();
  }
  /**
   * <code>map&lt;string, string&gt; like = 9;</code>
   */
  @Override

  public java.util.Map<String, String> getLikeMap() {
    return internalGetLike().getMap();
  }
  /**
   * <code>map&lt;string, string&gt; like = 9;</code>
   */
  @Override

  public String getLikeOrDefault(
      String key,
      String defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<String, String> map =
        internalGetLike().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, string&gt; like = 9;</code>
   */
  @Override

  public String getLikeOrThrow(
      String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<String, String> map =
        internalGetLike().getMap();
    if (!map.containsKey(key)) {
      throw new IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(dbName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, dbName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(tbName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, tbName_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetEq(),
        EqDefaultEntryHolder.defaultEntry,
        6);
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetGt(),
        GtDefaultEntryHolder.defaultEntry,
        7);
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetLt(),
        LtDefaultEntryHolder.defaultEntry,
        8);
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetLike(),
        LikeDefaultEntryHolder.defaultEntry,
        9);
    getUnknownFields().writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(dbName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, dbName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(tbName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, tbName_);
    }
    for (java.util.Map.Entry<String, String> entry
         : internalGetEq().getMap().entrySet()) {
      com.google.protobuf.MapEntry<String, String>
      eq__ = EqDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, eq__);
    }
    for (java.util.Map.Entry<String, String> entry
         : internalGetGt().getMap().entrySet()) {
      com.google.protobuf.MapEntry<String, String>
      gt__ = GtDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, gt__);
    }
    for (java.util.Map.Entry<String, String> entry
         : internalGetLt().getMap().entrySet()) {
      com.google.protobuf.MapEntry<String, String>
      lt__ = LtDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, lt__);
    }
    for (java.util.Map.Entry<String, String> entry
         : internalGetLike().getMap().entrySet()) {
      com.google.protobuf.MapEntry<String, String>
      like__ = LikeDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, like__);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof DelParams)) {
      return super.equals(obj);
    }
    DelParams other = (DelParams) obj;

    if (!getDbName()
        .equals(other.getDbName())) return false;
    if (!getTbName()
        .equals(other.getTbName())) return false;
    if (!internalGetEq().equals(
        other.internalGetEq())) return false;
    if (!internalGetGt().equals(
        other.internalGetGt())) return false;
    if (!internalGetLt().equals(
        other.internalGetLt())) return false;
    if (!internalGetLike().equals(
        other.internalGetLike())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + DBNAME_FIELD_NUMBER;
    hash = (53 * hash) + getDbName().hashCode();
    hash = (37 * hash) + TBNAME_FIELD_NUMBER;
    hash = (53 * hash) + getTbName().hashCode();
    if (!internalGetEq().getMap().isEmpty()) {
      hash = (37 * hash) + EQ_FIELD_NUMBER;
      hash = (53 * hash) + internalGetEq().hashCode();
    }
    if (!internalGetGt().getMap().isEmpty()) {
      hash = (37 * hash) + GT_FIELD_NUMBER;
      hash = (53 * hash) + internalGetGt().hashCode();
    }
    if (!internalGetLt().getMap().isEmpty()) {
      hash = (37 * hash) + LT_FIELD_NUMBER;
      hash = (53 * hash) + internalGetLt().hashCode();
    }
    if (!internalGetLike().getMap().isEmpty()) {
      hash = (37 * hash) + LIKE_FIELD_NUMBER;
      hash = (53 * hash) + internalGetLike().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static DelParams parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static DelParams parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static DelParams parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static DelParams parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static DelParams parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static DelParams parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static DelParams parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static DelParams parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static DelParams parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static DelParams parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static DelParams parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static DelParams parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(DelParams prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code mtCrud.DelParams}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:mtCrud.DelParams)
      DelParamsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mtcrudProto.internal_static_mtCrud_DelParams_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 6:
          return internalGetEq();
        case 7:
          return internalGetGt();
        case 8:
          return internalGetLt();
        case 9:
          return internalGetLike();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 6:
          return internalGetMutableEq();
        case 7:
          return internalGetMutableGt();
        case 8:
          return internalGetMutableLt();
        case 9:
          return internalGetMutableLike();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mtcrudProto.internal_static_mtCrud_DelParams_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              DelParams.class, Builder.class);
    }

    // Construct using pers.mtx.grpc.mtcrud.DelParams.newBuilder()
    private Builder() {

    }

    private Builder(
        BuilderParent parent) {
      super(parent);

    }
    @Override
    public Builder clear() {
      super.clear();
      dbName_ = "";

      tbName_ = "";

      internalGetMutableEq().clear();
      internalGetMutableGt().clear();
      internalGetMutableLt().clear();
      internalGetMutableLike().clear();
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return mtcrudProto.internal_static_mtCrud_DelParams_descriptor;
    }

    @Override
    public DelParams getDefaultInstanceForType() {
      return DelParams.getDefaultInstance();
    }

    @Override
    public DelParams build() {
      DelParams result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public DelParams buildPartial() {
      DelParams result = new DelParams(this);
      int from_bitField0_ = bitField0_;
      result.dbName_ = dbName_;
      result.tbName_ = tbName_;
      result.eq_ = internalGetEq();
      result.eq_.makeImmutable();
      result.gt_ = internalGetGt();
      result.gt_.makeImmutable();
      result.lt_ = internalGetLt();
      result.lt_.makeImmutable();
      result.like_ = internalGetLike();
      result.like_.makeImmutable();
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof DelParams) {
        return mergeFrom((DelParams)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(DelParams other) {
      if (other == DelParams.getDefaultInstance()) return this;
      if (!other.getDbName().isEmpty()) {
        dbName_ = other.dbName_;
        onChanged();
      }
      if (!other.getTbName().isEmpty()) {
        tbName_ = other.tbName_;
        onChanged();
      }
      internalGetMutableEq().mergeFrom(
          other.internalGetEq());
      internalGetMutableGt().mergeFrom(
          other.internalGetGt());
      internalGetMutableLt().mergeFrom(
          other.internalGetLt());
      internalGetMutableLike().mergeFrom(
          other.internalGetLike());
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 26: {
              dbName_ = input.readStringRequireUtf8();

              break;
            } // case 26
            case 34: {
              tbName_ = input.readStringRequireUtf8();

              break;
            } // case 34
            case 50: {
              com.google.protobuf.MapEntry<String, String>
              eq__ = input.readMessage(
                  EqDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableEq().getMutableMap().put(
                  eq__.getKey(), eq__.getValue());
              break;
            } // case 50
            case 58: {
              com.google.protobuf.MapEntry<String, String>
              gt__ = input.readMessage(
                  GtDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableGt().getMutableMap().put(
                  gt__.getKey(), gt__.getValue());
              break;
            } // case 58
            case 66: {
              com.google.protobuf.MapEntry<String, String>
              lt__ = input.readMessage(
                  LtDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableLt().getMutableMap().put(
                  lt__.getKey(), lt__.getValue());
              break;
            } // case 66
            case 74: {
              com.google.protobuf.MapEntry<String, String>
              like__ = input.readMessage(
                  LikeDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableLike().getMutableMap().put(
                  like__.getKey(), like__.getValue());
              break;
            } // case 74
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private Object dbName_ = "";
    /**
     * <code>string dbName = 3;</code>
     * @return The dbName.
     */
    public String getDbName() {
      Object ref = dbName_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        dbName_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>string dbName = 3;</code>
     * @return The bytes for dbName.
     */
    public com.google.protobuf.ByteString
        getDbNameBytes() {
      Object ref = dbName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        dbName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string dbName = 3;</code>
     * @param value The dbName to set.
     * @return This builder for chaining.
     */
    public Builder setDbName(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      dbName_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string dbName = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearDbName() {
      
      dbName_ = getDefaultInstance().getDbName();
      onChanged();
      return this;
    }
    /**
     * <code>string dbName = 3;</code>
     * @param value The bytes for dbName to set.
     * @return This builder for chaining.
     */
    public Builder setDbNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      dbName_ = value;
      onChanged();
      return this;
    }

    private Object tbName_ = "";
    /**
     * <code>string tbName = 4;</code>
     * @return The tbName.
     */
    public String getTbName() {
      Object ref = tbName_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        tbName_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>string tbName = 4;</code>
     * @return The bytes for tbName.
     */
    public com.google.protobuf.ByteString
        getTbNameBytes() {
      Object ref = tbName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        tbName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string tbName = 4;</code>
     * @param value The tbName to set.
     * @return This builder for chaining.
     */
    public Builder setTbName(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      tbName_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string tbName = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearTbName() {
      
      tbName_ = getDefaultInstance().getTbName();
      onChanged();
      return this;
    }
    /**
     * <code>string tbName = 4;</code>
     * @param value The bytes for tbName to set.
     * @return This builder for chaining.
     */
    public Builder setTbNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      tbName_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        String, String> eq_;
    private com.google.protobuf.MapField<String, String>
    internalGetEq() {
      if (eq_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            EqDefaultEntryHolder.defaultEntry);
      }
      return eq_;
    }
    private com.google.protobuf.MapField<String, String>
    internalGetMutableEq() {
      onChanged();;
      if (eq_ == null) {
        eq_ = com.google.protobuf.MapField.newMapField(
            EqDefaultEntryHolder.defaultEntry);
      }
      if (!eq_.isMutable()) {
        eq_ = eq_.copy();
      }
      return eq_;
    }

    public int getEqCount() {
      return internalGetEq().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; eq = 6;</code>
     */

    @Override
    public boolean containsEq(
        String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetEq().getMap().containsKey(key);
    }
    /**
     * Use {@link #getEqMap()} instead.
     */
    @Override
    @Deprecated
    public java.util.Map<String, String> getEq() {
      return getEqMap();
    }
    /**
     * <code>map&lt;string, string&gt; eq = 6;</code>
     */
    @Override

    public java.util.Map<String, String> getEqMap() {
      return internalGetEq().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; eq = 6;</code>
     */
    @Override

    public String getEqOrDefault(
        String key,
        String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<String, String> map =
          internalGetEq().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; eq = 6;</code>
     */
    @Override

    public String getEqOrThrow(
        String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<String, String> map =
          internalGetEq().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearEq() {
      internalGetMutableEq().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;string, string&gt; eq = 6;</code>
     */

    public Builder removeEq(
        String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableEq().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @Deprecated
    public java.util.Map<String, String>
    getMutableEq() {
      return internalGetMutableEq().getMutableMap();
    }
    /**
     * <code>map&lt;string, string&gt; eq = 6;</code>
     */
    public Builder putEq(
        String key,
        String value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) {
  throw new NullPointerException("map value");
}

      internalGetMutableEq().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, string&gt; eq = 6;</code>
     */

    public Builder putAllEq(
        java.util.Map<String, String> values) {
      internalGetMutableEq().getMutableMap()
          .putAll(values);
      return this;
    }

    private com.google.protobuf.MapField<
        String, String> gt_;
    private com.google.protobuf.MapField<String, String>
    internalGetGt() {
      if (gt_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            GtDefaultEntryHolder.defaultEntry);
      }
      return gt_;
    }
    private com.google.protobuf.MapField<String, String>
    internalGetMutableGt() {
      onChanged();;
      if (gt_ == null) {
        gt_ = com.google.protobuf.MapField.newMapField(
            GtDefaultEntryHolder.defaultEntry);
      }
      if (!gt_.isMutable()) {
        gt_ = gt_.copy();
      }
      return gt_;
    }

    public int getGtCount() {
      return internalGetGt().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; gt = 7;</code>
     */

    @Override
    public boolean containsGt(
        String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetGt().getMap().containsKey(key);
    }
    /**
     * Use {@link #getGtMap()} instead.
     */
    @Override
    @Deprecated
    public java.util.Map<String, String> getGt() {
      return getGtMap();
    }
    /**
     * <code>map&lt;string, string&gt; gt = 7;</code>
     */
    @Override

    public java.util.Map<String, String> getGtMap() {
      return internalGetGt().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; gt = 7;</code>
     */
    @Override

    public String getGtOrDefault(
        String key,
        String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<String, String> map =
          internalGetGt().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; gt = 7;</code>
     */
    @Override

    public String getGtOrThrow(
        String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<String, String> map =
          internalGetGt().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearGt() {
      internalGetMutableGt().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;string, string&gt; gt = 7;</code>
     */

    public Builder removeGt(
        String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableGt().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @Deprecated
    public java.util.Map<String, String>
    getMutableGt() {
      return internalGetMutableGt().getMutableMap();
    }
    /**
     * <code>map&lt;string, string&gt; gt = 7;</code>
     */
    public Builder putGt(
        String key,
        String value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) {
  throw new NullPointerException("map value");
}

      internalGetMutableGt().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, string&gt; gt = 7;</code>
     */

    public Builder putAllGt(
        java.util.Map<String, String> values) {
      internalGetMutableGt().getMutableMap()
          .putAll(values);
      return this;
    }

    private com.google.protobuf.MapField<
        String, String> lt_;
    private com.google.protobuf.MapField<String, String>
    internalGetLt() {
      if (lt_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LtDefaultEntryHolder.defaultEntry);
      }
      return lt_;
    }
    private com.google.protobuf.MapField<String, String>
    internalGetMutableLt() {
      onChanged();;
      if (lt_ == null) {
        lt_ = com.google.protobuf.MapField.newMapField(
            LtDefaultEntryHolder.defaultEntry);
      }
      if (!lt_.isMutable()) {
        lt_ = lt_.copy();
      }
      return lt_;
    }

    public int getLtCount() {
      return internalGetLt().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; lt = 8;</code>
     */

    @Override
    public boolean containsLt(
        String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetLt().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLtMap()} instead.
     */
    @Override
    @Deprecated
    public java.util.Map<String, String> getLt() {
      return getLtMap();
    }
    /**
     * <code>map&lt;string, string&gt; lt = 8;</code>
     */
    @Override

    public java.util.Map<String, String> getLtMap() {
      return internalGetLt().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; lt = 8;</code>
     */
    @Override

    public String getLtOrDefault(
        String key,
        String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<String, String> map =
          internalGetLt().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; lt = 8;</code>
     */
    @Override

    public String getLtOrThrow(
        String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<String, String> map =
          internalGetLt().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearLt() {
      internalGetMutableLt().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;string, string&gt; lt = 8;</code>
     */

    public Builder removeLt(
        String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableLt().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @Deprecated
    public java.util.Map<String, String>
    getMutableLt() {
      return internalGetMutableLt().getMutableMap();
    }
    /**
     * <code>map&lt;string, string&gt; lt = 8;</code>
     */
    public Builder putLt(
        String key,
        String value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) {
  throw new NullPointerException("map value");
}

      internalGetMutableLt().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, string&gt; lt = 8;</code>
     */

    public Builder putAllLt(
        java.util.Map<String, String> values) {
      internalGetMutableLt().getMutableMap()
          .putAll(values);
      return this;
    }

    private com.google.protobuf.MapField<
        String, String> like_;
    private com.google.protobuf.MapField<String, String>
    internalGetLike() {
      if (like_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LikeDefaultEntryHolder.defaultEntry);
      }
      return like_;
    }
    private com.google.protobuf.MapField<String, String>
    internalGetMutableLike() {
      onChanged();;
      if (like_ == null) {
        like_ = com.google.protobuf.MapField.newMapField(
            LikeDefaultEntryHolder.defaultEntry);
      }
      if (!like_.isMutable()) {
        like_ = like_.copy();
      }
      return like_;
    }

    public int getLikeCount() {
      return internalGetLike().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; like = 9;</code>
     */

    @Override
    public boolean containsLike(
        String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetLike().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLikeMap()} instead.
     */
    @Override
    @Deprecated
    public java.util.Map<String, String> getLike() {
      return getLikeMap();
    }
    /**
     * <code>map&lt;string, string&gt; like = 9;</code>
     */
    @Override

    public java.util.Map<String, String> getLikeMap() {
      return internalGetLike().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; like = 9;</code>
     */
    @Override

    public String getLikeOrDefault(
        String key,
        String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<String, String> map =
          internalGetLike().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; like = 9;</code>
     */
    @Override

    public String getLikeOrThrow(
        String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<String, String> map =
          internalGetLike().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearLike() {
      internalGetMutableLike().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;string, string&gt; like = 9;</code>
     */

    public Builder removeLike(
        String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableLike().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @Deprecated
    public java.util.Map<String, String>
    getMutableLike() {
      return internalGetMutableLike().getMutableMap();
    }
    /**
     * <code>map&lt;string, string&gt; like = 9;</code>
     */
    public Builder putLike(
        String key,
        String value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) {
  throw new NullPointerException("map value");
}

      internalGetMutableLike().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, string&gt; like = 9;</code>
     */

    public Builder putAllLike(
        java.util.Map<String, String> values) {
      internalGetMutableLike().getMutableMap()
          .putAll(values);
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:mtCrud.DelParams)
  }

  // @@protoc_insertion_point(class_scope:mtCrud.DelParams)
  private static final DelParams DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new DelParams();
  }

  public static DelParams getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DelParams>
      PARSER = new com.google.protobuf.AbstractParser<DelParams>() {
    @Override
    public DelParams parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<DelParams> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<DelParams> getParserForType() {
    return PARSER;
  }

  @Override
  public DelParams getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

